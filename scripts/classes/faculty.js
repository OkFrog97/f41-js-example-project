/**
 * Самый простой "Паттерн проектирования" - Singleton;
 * "Паттерн проектирования" - паттерн (образец, шаблон) для проектирования классов/совокупностей классов.
 * Паттерны решают какие-либо проблемы (как создавать объекты, как адаптировать один объект к другому  и т.п).
 * Singleton - Гарантирует, что у класса есть только один экземпляр, и предоставляет к нему глобальную точку доступа.
 * S. нужен для того, что бы не плодить объекты, которые должны быть в единственном экземпляре.
 */
export class FacultySingleton {
    _instance = null;
    _facultyStore = {
        econom: 'Экономический',
        phisic: 'Физический',
        math: 'Математический'
    }; 

    constructor() {
        if (!this._instance) {
            this._instance = this;
        }
        return this._instance;
    }

    getFaculty(key) {
        return this._facultyStore[key];
    }
}